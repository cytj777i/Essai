-- 本地脚本：可拖动的UI界面
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- 发送加载成功通知
game:GetService("StarterGui"):SetCore("SendNotification",{
    Title = "作者：ROBLOX.T7",
    Text = "合作：XTTT",
    Duration = 5
})

-- 创建主ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DragUI"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

-- 创建主框架 - 调整为更紧凑的尺寸
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0.6, 0, 0.7, 0) -- 调整为更紧凑的尺寸
mainFrame.Position = UDim2.new(0.2, 0, 0.15, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色背景
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 1
mainFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
mainFrame.Active = true
mainFrame.Parent = screenGui

-- 创建圆角效果
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = mainFrame

-- 创建标题栏
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 30) -- 更矮的标题栏
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- 深黑色
titleBar.BackgroundTransparency = 0.3 -- 半透明
titleBar.BorderSizePixel = 0
titleBar.Active = true
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

-- 标题文字 - 修改为ROBLOX.T7脚本
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(0.6, 0, 1, 0)
titleLabel.Position = UDim2.new(0.2, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "ROBLOX.T7脚本"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = titleBar

-- 隐藏按钮（右上角）
local hideButton = Instance.new("TextButton")
hideButton.Name = "HideButton"
hideButton.Size = UDim2.new(0, 25, 0, 25)
hideButton.Position = UDim2.new(1, -30, 0, 2)
hideButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- 深灰色
hideButton.BackgroundTransparency = 0.7 -- 半透明
hideButton.BorderSizePixel = 0
hideButton.Text = "X"
hideButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
hideButton.TextScaled = true
hideButton.Font = Enum.Font.GothamBold
hideButton.Parent = titleBar

local hideButtonCorner = Instance.new("UICorner")
hideButtonCorner.CornerRadius = UDim.new(0, 4)
hideButtonCorner.Parent = hideButton

-- 内容区域 - 调整尺寸以容纳更多内容
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -10, 1, -35)
contentFrame.Position = UDim2.new(0, 5, 0, 30)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- 创建背景图片 - 占满标题栏以下的整个内容区域
local backgroundImage = Instance.new("ImageLabel")
backgroundImage.Name = "BackgroundImage"
backgroundImage.Size = UDim2.new(1, 0, 1, 0) -- 占满整个内容区域
backgroundImage.Position = UDim2.new(0, 0, 0, 0) -- 从左上角开始
backgroundImage.BackgroundTransparency = 1
backgroundImage.Image = "rbxassetid://105663726871477"
backgroundImage.ScaleType = Enum.ScaleType.Crop -- 使用裁剪模式保持比例并填满区域
backgroundImage.ZIndex = 0 -- 确保在按钮后面
backgroundImage.Parent = contentFrame

-- 创建滚动框架
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Name = "ScrollFrame"
scrollFrame.Size = UDim2.new(1, 0, 1, 0)
scrollFrame.Position = UDim2.new(0, 0, 0, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 6
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(80, 80, 80)
scrollFrame.ZIndex = 2 -- 确保在背景图片前面
scrollFrame.Parent = contentFrame

-- 使用UIListLayout来排列按钮 - 减小间距
local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 5) -- 减小按钮间距
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.VerticalAlignment = Enum.VerticalAlignment.Top
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Parent = scrollFrame

-- 更新滚动框架内容大小
listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 10)
end)

-- 创建正方形图标（隐藏时显示）
local squareIcon = Instance.new("ImageButton")
squareIcon.Name = "SquareIcon"
squareIcon.Size = UDim2.new(0, 50, 0, 50)
squareIcon.Position = UDim2.new(0, 10, 0, 10)
squareIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色背景
squareIcon.BackgroundTransparency = 0.7 -- 半透明
squareIcon.BorderSizePixel = 1
squareIcon.BorderColor3 = Color3.fromRGB(50, 50, 50)
squareIcon.Image = "http://www.roblox.com/asset/?id=94635173333299"
squareIcon.ScaleType = Enum.ScaleType.Fit
squareIcon.ImageTransparency = 0
squareIcon.Visible = false
squareIcon.Active = true
squareIcon.Parent = screenGui

local squareCorner = Instance.new("UICorner")
squareCorner.CornerRadius = UDim.new(0, 6)
squareCorner.Parent = squareIcon

-- 状态变量
local isHidden = false

-- ESP透视功能变量
local ESPEnabled = false
local ESPConnections = {}
local ESPHighlights = {}
local ESPLabels = {} -- 新增：存储玩家名字标签

-- NPC透视功能变量
local NPCESPEnabled = false
local NPCESPConnections = {}
local NPCESPHighlights = {}
local NPCESPLabels = {} -- 新增：存储NPC名字标签

-- 走路创人功能变量
local ThrowEnabled = false
local ThrowScript

-- 夜视功能变量
local nightVisionEnabled = false
local originalAmbient

-- 无限跳功能变量
local infiniteJumpEnabled = false
local jumpConnection

-- 防止摔落伤害功能变量
local antiFallEnabled = false
local antiFallConnection

-- 全局物体漂浮功能变量
local globalFloatEnabled = false
local floatScript

-- 单一物体飞行功能变量
local singleFloatEnabled = false
local singleFloatScript

-- 崩飞未固定零件功能变量
local breakPartsEnabled = false
local breakPartsScript

-- 爬墙功能变量
local climbEnabled = false
local climbScript

-- 传送功能变量
local Teleport = {
    TargetPlayer = nil,
    PlayerList = {}
}

-- 坐标管理变量
local CoordinateManager = {
    SavedCoordinates = {},
    FilePath = "SavedCoordinates.json"
}

-- 新功能变量
local airWalkEnabled = false
local airWalkScript

local invisibleEnabled = false
local invisibleScript

local egorEnabled = false
local egorScript

local throwFlyEnabled = false
local throwFlyScript

-- 传送工具功能
local function CreateTeleportTool()
    local mouse = game.Players.LocalPlayer:GetMouse() 
    local tool = Instance.new("Tool") 
    tool.RequiresHandle = false 
    tool.Name = "[ROBLOX.T7]传送工具" 
    tool.Activated:connect(function() 
        local pos = mouse.Hit + Vector3.new(0, 2.5, 0) 
        pos = CFrame.new(pos.X, pos.Y, pos.Z) 
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos 
        end
    end) 
    tool.Parent = game.Players.LocalPlayer.Backpack
    ShowNotification("传送工具已添加到背包", Color3.fromRGB(0, 255, 100))
end

-- 创建通知系统
local function ShowNotification(message, color)
    color = color or Color3.fromRGB(0, 150, 255)

    local NotificationGui = Instance.new("ScreenGui")
    NotificationGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    NotificationGui.ResetOnSpawn = false

    local NotificationFrame = Instance.new("Frame")
    NotificationFrame.Parent = NotificationGui
    NotificationFrame.Size = UDim2.new(0, 200, 0, 50)
    NotificationFrame.Position = UDim2.new(0.5, -100, 0.1, 0)
    NotificationFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色背景
    NotificationFrame.BackgroundTransparency = 0.5 -- 半透明

    local NotificationCorner = Instance.new("UICorner")
    NotificationCorner.Parent = NotificationFrame
    NotificationCorner.CornerRadius = UDim.new(0, 8)

    local NotificationStroke = Instance.new("UIStroke")
    NotificationStroke.Parent = NotificationFrame
    NotificationStroke.Color = color
    NotificationStroke.Thickness = 2

    local NotificationText = Instance.new("TextLabel")
    NotificationText.Parent = NotificationFrame
    NotificationText.Size = UDim2.new(1, -20, 1, -10)
    NotificationText.Position = UDim2.new(0, 10, 0, 5)
    NotificationText.BackgroundTransparency = 1
    NotificationText.Text = message
    NotificationText.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    NotificationText.TextSize = 14
    NotificationText.Font = Enum.Font.Gotham
    NotificationText.TextWrapped = true

    delay(2, function()
        for i = 0, 1, 0.1 do
            NotificationFrame.BackgroundTransparency = i + 0.5
            NotificationText.TextTransparency = i
            wait(0.05)
        end
        NotificationGui:Destroy()
    end)
end

-- 增强的ESP透视功能 - 显示玩家名称
local function CreateESP(player)
    if player == Players.LocalPlayer then return end

    local character = player.Character
    if not character then return end

    -- 创建高亮效果 - 保持原来的白色半透明
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.FillColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.7
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.OutlineTransparency = 0.3
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = character

    ESPHighlights[player] = highlight

    -- 创建名称标签 - 玩家用黑色文字
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_NameTag"
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0) -- 在头顶上方显示
    billboard.AlwaysOnTop = true
    local head = character:FindFirstChild("Head")
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    billboard.Adornee = head or humanoidRootPart

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- 黑色文字
    nameLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255) -- 白色描边
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextSize = 14
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.Parent = billboard

    if head or humanoidRootPart then
        billboard.Parent = character
        ESPLabels[player] = billboard
    end

    -- 监听角色变化
    local characterAddedConnection = player.CharacterAdded:Connect(function(newChar)
        if ESPHighlights[player] then
            ESPHighlights[player]:Destroy()
            ESPHighlights[player] = nil
        end
        if ESPLabels[player] then
            ESPLabels[player]:Destroy()
            ESPLabels[player] = nil
        end

        task.wait(1)

        if ESPEnabled and newChar then
            local newHighlight = Instance.new("Highlight")
            newHighlight.Name = "ESP_Highlight"
            newHighlight.FillColor = Color3.fromRGB(255, 255, 255)
            newHighlight.FillTransparency = 0.7
            newHighlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            newHighlight.OutlineTransparency = 0.3
            newHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            newHighlight.Parent = newChar

            ESPHighlights[player] = newHighlight

            -- 重新创建名称标签
            local newBillboard = Instance.new("BillboardGui")
            newBillboard.Name = "ESP_NameTag"
            newBillboard.Size = UDim2.new(0, 200, 0, 50)
            newBillboard.StudsOffset = Vector3.new(0, 3, 0)
            newBillboard.AlwaysOnTop = true
            local newHead = newChar:FindFirstChild("Head")
            local newHumanoidRootPart = newChar:FindFirstChild("HumanoidRootPart")
            newBillboard.Adornee = newHead or newHumanoidRootPart

            local newNameLabel = Instance.new("TextLabel")
            newNameLabel.Size = UDim2.new(1, 0, 1, 0)
            newNameLabel.BackgroundTransparency = 1
            newNameLabel.Text = player.Name
            newNameLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- 黑色文字
            newNameLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255) -- 白色描边
            newNameLabel.TextStrokeTransparency = 0
            newNameLabel.TextSize = 14
            newNameLabel.Font = Enum.Font.GothamBold
            newNameLabel.Parent = newBillboard

            if newHead or newHumanoidRootPart then
                newBillboard.Parent = newChar
                ESPLabels[player] = newBillboard
            end
        end
    end)

    local characterRemovingConnection = player.CharacterRemoving:Connect(function()
        if ESPHighlights[player] then
            ESPHighlights[player]:Destroy()
            ESPHighlights[player] = nil
        end
        if ESPLabels[player] then
            ESPLabels[player]:Destroy()
            ESPLabels[player] = nil
        end
    end)

    ESPConnections[player] = {
        characterAdded = characterAddedConnection,
        characterRemoving = characterRemovingConnection
    }
end

local function RemoveESP(player)
    if ESPConnections[player] then
        ESPConnections[player].characterAdded:Disconnect()
        ESPConnections[player].characterRemoving:Disconnect()
        ESPConnections[player] = nil
    end

    if ESPHighlights[player] then
        ESPHighlights[player]:Destroy()
        ESPHighlights[player] = nil
    end

    if ESPLabels[player] then
        ESPLabels[player]:Destroy()
        ESPLabels[player] = nil
    end
end

local function EnableESP()
    if ESPEnabled then return end

    ESPEnabled = true

    for _, player in pairs(Players:GetPlayers()) do
        CreateESP(player)
    end

    -- 修复：正确设置新玩家加入的监听
    local playerAddedConnection = Players.PlayerAdded:Connect(function(player)
        CreateESP(player)
    end)

    local playerRemovingConnection = Players.PlayerRemoving:Connect(function(player)
        RemoveESP(player)
    end)

    ESPConnections["Global"] = {
        playerAdded = playerAddedConnection,
        playerRemoving = playerRemovingConnection
    }

    ShowNotification("ESP透视已开启", Color3.fromRGB(0, 255, 100))
end

local function DisableESP()
    if not ESPEnabled then return end

    ESPEnabled = false

    if ESPConnections["Global"] then
        ESPConnections["Global"].playerAdded:Disconnect()
        ESPConnections["Global"].playerRemoving:Disconnect()
        ESPConnections["Global"] = nil
    end

    for _, player in pairs(Players:GetPlayers()) do
        RemoveESP(player)
    end

    ShowNotification("ESP透视已关闭", Color3.fromRGB(255, 100, 0))
end

local function ToggleESP()
    if ESPEnabled then
        DisableESP()
        return false
    else
        EnableESP()
        return true
    end
end

-- NPC透视功能
local function CreateNPCESP(npc)
    if not npc:IsA("Model") then return end

    local humanoid = npc:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    -- 检查是否已经是玩家角色
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character == npc then
            return
        end
    end

    -- 创建高亮效果 - 保持原来的白色半透明
    local highlight = Instance.new("Highlight")
    highlight.Name = "NPC_ESP_Highlight"
    highlight.FillColor = Color3.fromRGB(255, 255, 255) -- 白色高亮
    highlight.FillTransparency = 0.7
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.OutlineTransparency = 0.3
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = npc

    NPCESPHighlights[npc] = highlight

    -- 创建名称标签 - NPC用白色文字，显示NPC自己的名字
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "NPC_ESP_NameTag"
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    local head = npc:FindFirstChild("Head")
    local humanoidRootPart = npc:FindFirstChild("HumanoidRootPart")
    billboard.Adornee = head or humanoidRootPart

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = npc.Name -- 只显示NPC自己的名字，不添加"(NPC)"后缀
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0) -- 黑色描边
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextSize = 12
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.Parent = billboard

    if head or humanoidRootPart then
        billboard.Parent = npc
        NPCESPLabels[npc] = billboard
    end

    -- 监听NPC销毁
    local descendantRemovingConnection = npc.DescendantRemoving:Connect(function(descendant)
        if descendant == humanoid then
            RemoveNPCESP(npc)
        end
    end)

    NPCESPConnections[npc] = {
        descendantRemoving = descendantRemovingConnection
    }
end

local function RemoveNPCESP(npc)
    if NPCESPConnections[npc] then
        NPCESPConnections[npc].descendantRemoving:Disconnect()
        NPCESPConnections[npc] = nil
    end

    if NPCESPHighlights[npc] then
        NPCESPHighlights[npc]:Destroy()
        NPCESPHighlights[npc] = nil
    end

    if NPCESPLabels[npc] then
        NPCESPLabels[npc]:Destroy()
        NPCESPLabels[npc] = nil
    end
end

-- 扫描工作区中的NPC
local function ScanForNPCs()
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj ~= Players.LocalPlayer.Character then
            local humanoid = obj:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- 检查是否不是玩家角色
                local isPlayer = false
                for _, player in ipairs(Players:GetPlayers()) do
                    if player.Character == obj then
                        isPlayer = true
                        break
                    end
                end

                if not isPlayer then
                    CreateNPCESP(obj)
                end
            end
        end
    end
end

-- 启用NPC ESP
local function EnableNPCESP()
    if NPCESPEnabled then return end

    NPCESPEnabled = true

    -- 扫描现有NPC
    ScanForNPCs()

    -- 监听新NPC
    local descendantAddedConnection = workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Model") then
            task.wait(0.1) -- 等待模型完全加载
            local humanoid = descendant:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- 检查是否不是玩家
                local isPlayer = false
                for _, player in ipairs(Players:GetPlayers()) do
                    if player.Character == descendant then
                        isPlayer = true
                        break
                    end
                end

                if not isPlayer then
                    CreateNPCESP(descendant)
                end
            end
        end
    end)

    NPCESPConnections["Global"] = {
        descendantAdded = descendantAddedConnection
    }

    ShowNotification("NPC透视已开启", Color3.fromRGB(0, 255, 100))
end

-- 禁用NPC ESP
local function DisableNPCESP()
    if not NPCESPEnabled then return end

    NPCESPEnabled = false

    if NPCESPConnections["Global"] then
        NPCESPConnections["Global"].descendantAdded:Disconnect()
        NPCESPConnections["Global"] = nil
    end

    -- 移除所有NPC ESP
    for npc, _ in pairs(NPCESPHighlights) do
        RemoveNPCESP(npc)
    end

    ShowNotification("NPC透视已关闭", Color3.fromRGB(255, 100, 0))
end

-- 切换NPC ESP
local function ToggleNPCESP()
    if NPCESPEnabled then
        DisableNPCESP()
        return false
    else
        EnableNPCESP()
        return true
    end
end

-- 走路创人功能
local function ToggleThrow(value)
    if value then
        -- 加载走路创人脚本
        local success, result = pcall(function()
            ThrowScript = loadstring(game:HttpGet("https://raw.githubusercontent.com/cytj777i/Throw/main/Throw"))()
        end)

        if success then
            ThrowEnabled = true
            ShowNotification("走路创人功能已开启", Color3.fromRGB(0, 255, 100))
        else
            ThrowEnabled = false
            ShowNotification("走路创人功能加载失败", Color3.fromRGB(255, 50, 50))
            warn("走路创人脚本加载错误: " .. tostring(result))
        end
    else
        -- 这里假设外部脚本有自己的关闭机制
        ThrowEnabled = false
        ShowNotification("走路创人功能已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 爬墙功能
local function ToggleClimb(value)
    if value then
        -- 加载爬墙脚本
        local success, result = pcall(function()
            climbScript = loadstring(game:HttpGet("https://pastebin.com/raw/zXk4Rq2r"))()
        end)

        if success then
            climbEnabled = true
            ShowNotification("爬墙功能已开启（无法关闭）", Color3.fromRGB(0, 255, 100))
        else
            climbEnabled = false
            ShowNotification("爬墙功能加载失败", Color3.fromRGB(255, 50, 50))
            warn("爬墙脚本加载错误: " .. tostring(result))
        end
    else
        -- 爬墙功能无法关闭，只显示提示
        ShowNotification("爬墙功能已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 文件操作函数
local function ReadFile(path)
    local success, result = pcall(function()
        if readfile then
            return readfile(path)
        elseif syn and syn.readfile then
            return syn.readfile(path)
        else
            return nil
        end
    end)
    return success and result or nil
end

local function WriteFile(path, content)
    local success, result = pcall(function()
        if writefile then
            writefile(path, content)
            return true
        elseif syn and syn.writefile then
            syn.writefile(path, content)
            return true
        else
            return false
        end
    end)
    return success and result or false
end

-- 加载保存的坐标
local function LoadCoordinates()
    local content = ReadFile(CoordinateManager.FilePath)
    if content then
        local success, data = pcall(function()
            return HttpService:JSONDecode(content)
        end)
        if success and type(data) == "table" then
            CoordinateManager.SavedCoordinates = data
            return true
        end
    end
    return false
end

-- 保存坐标到文件
local function SaveCoordinates()
    local success = pcall(function()
        local json = HttpService:JSONEncode(CoordinateManager.SavedCoordinates)
        return WriteFile(CoordinateManager.FilePath, json)
    end)
    return success
end

-- 初始化坐标管理
local function InitCoordinateManager()
    LoadCoordinates()
end

-- 夜视功能（修复版）
local function ToggleNightVision(value)
    if value then
        originalAmbient = Lighting.Ambient
        Lighting.Ambient = Color3.new(1, 1, 1)
        nightVisionEnabled = true
        ShowNotification("夜视已开启", Color3.fromRGB(255, 255, 0))
    else
        if originalAmbient then
            Lighting.Ambient = originalAmbient
        else
            Lighting.Ambient = Color3.new(0, 0, 0)
        end
        nightVisionEnabled = false
        ShowNotification("夜视已关闭", Color3.fromRGB(255, 255, 0))
    end
end

-- 无限跳功能（修复版）
local function ToggleInfiniteJump(value)
    if value then
        infiniteJumpEnabled = true

        jumpConnection = UserInputService.JumpRequest:Connect(function()
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:ChangeState("Jumping")
                end
            end
        end)

        ShowNotification("无限跳已开启", Color3.fromRGB(0, 255, 100))
    else
        infiniteJumpEnabled = false

        if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
        end

        ShowNotification("无限跳已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 防止摔落伤害功能
local function ToggleAntiFall(value)
    if value then
        local success, result = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/cytj777i/Fall-injury/main/%E9%98%B2%E6%AD%A2%E6%91%94%E8%90%BD%E4%BC%A4%E5%AE%B3"))()
        end)

        if success then
            antiFallEnabled = true
            ShowNotification("防止摔落伤害已开启", Color3.fromRGB(0, 255, 100))
        else
            antiFallEnabled = false
            ShowNotification("防止摔落伤害加载失败", Color3.fromRGB(255, 50, 50))
            warn("防止摔落伤害脚本加载错误: " .. tostring(result))
        end
    else
        antiFallEnabled = false
        ShowNotification("防止摔落伤害已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 全局物体漂浮功能
local function ToggleGlobalFloat(value)
    if value then
        local success, result = pcall(function()
            floatScript = loadstring(game:HttpGet("https://raw.githubusercontent.com/cytj777i/6669178/main/%E5%85%A8%E5%B1%80%E7%89%A9%E4%BD%93%E6%BC%82%E6%B5%AE%E6%9C%80%E7%BB%88%E4%BC%98%E5%8C%96%E7%89%88"))()
        end)

        if success then
            globalFloatEnabled = true
            ShowNotification("全局物体漂浮已开启", Color3.fromRGB(0, 255, 100))
        else
            globalFloatEnabled = false
            ShowNotification("全局物体漂浮加载失败", Color3.fromRGB(255, 50, 50))
            warn("全局物体漂浮脚本加载错误: " .. tostring(result))
        end
    else
        globalFloatEnabled = false
        ShowNotification("全局物体漂浮已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 踏空行走功能
local function ToggleAirWalk(value)
    if value then
        local success, result = pcall(function()
            airWalkScript = loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Float'))()
        end)

        if success then
            airWalkEnabled = true
            ShowNotification("踏空行走已开启", Color3.fromRGB(0, 255, 100))
        else
            airWalkEnabled = false
            ShowNotification("踏空行走加载失败", Color3.fromRGB(255, 50, 50))
            warn("踏空行走脚本加载错误: " .. tostring(result))
        end
    else
        airWalkEnabled = false
        ShowNotification("踏空行走已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 隐身功能
local function ToggleInvisible(value)
    if value then
        local success, result = pcall(function()
            invisibleScript = loadstring(game:HttpGet('https://pastebin.com/raw/3Rnd9rHf'))()
        end)

        if success then
            invisibleEnabled = true
            ShowNotification("隐身功能已开启", Color3.fromRGB(0, 255, 100))
        else
            invisibleEnabled = false
            ShowNotification("隐身功能加载失败", Color3.fromRGB(255, 50, 50))
            warn("隐身脚本加载错误: " .. tostring(result))
        end
    else
        invisibleEnabled = false
        ShowNotification("隐身功能已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- Egor功能
local function ToggleEgor(value)
    if value then
        local success, result = pcall(function()
            egorScript = loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Fake-Lag-Runner-read-description-44701"))()
        end)

        if success then
            egorEnabled = true
            ShowNotification("Egor功能已开启", Color3.fromRGB(0, 255, 100))
        else
            egorEnabled = false
            ShowNotification("Egor功能加载失败", Color3.fromRGB(255, 50, 50))
            warn("Egor脚本加载错误: " .. tostring(result))
        end
    else
        egorEnabled = false
        ShowNotification("Egor功能已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 甩飞功能
local function ToggleThrowFly(value)
    if value then
        local success, result = pcall(function()
            throwFlyScript = loadstring(game:HttpGet("https://raw.githubusercontent.com/dingding123hhh/hknvh/main/%E7%94%A9%E9%A3%9E.txt"))()
        end)

        if success then
            throwFlyEnabled = true
            ShowNotification("甩飞功能已开启", Color3.fromRGB(0, 255, 100))
        else
            throwFlyEnabled = false
            ShowNotification("甩飞功能加载失败", Color3.fromRGB(255, 50, 50))
            warn("甩飞脚本加载错误: " .. tostring(result))
        end
    else
        throwFlyEnabled = false
        ShowNotification("甩飞功能已关闭", Color3.fromRGB(255, 100, 0))
    end
end

-- 文本输入弹窗
local function CreateTextInputPopup(title, placeholder, defaultValue, callback)
    local PopupGui = Instance.new("ScreenGui")
    PopupGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local PopupFrame = Instance.new("Frame")
    PopupFrame.Parent = PopupGui
    PopupFrame.Size = UDim2.new(0, 250, 0, 150)
    PopupFrame.Position = UDim2.new(0.5, -125, 0.5, -75)
    PopupFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色背景
    PopupFrame.BackgroundTransparency = 0.3 -- 半透明
    PopupFrame.Active = true
    PopupFrame.Draggable = true

    local PopupCorner = Instance.new("UICorner")
    PopupCorner.Parent = PopupFrame
    PopupCorner.CornerRadius = UDim.new(0, 10)

    local PopupStroke = Instance.new("UIStroke")
    PopupStroke.Parent = PopupFrame
    PopupStroke.Color = Color3.fromRGB(80, 80, 80)
    PopupStroke.Thickness = 2

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Parent = PopupFrame
    TitleLabel.Size = UDim2.new(1, -20, 0, 25)
    TitleLabel.Position = UDim2.new(0, 10, 0, 8)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    TitleLabel.TextSize = 12
    TitleLabel.Font = Enum.Font.GothamBold

    local InputBox = Instance.new("TextBox")
    InputBox.Parent = PopupFrame
    InputBox.Size = UDim2.new(1, -40, 0, 35)
    InputBox.Position = UDim2.new(0, 20, 0, 40)
    InputBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    InputBox.BackgroundTransparency = 0.5 -- 半透明
    InputBox.PlaceholderText = placeholder
    InputBox.Text = tostring(defaultValue)
    InputBox.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    InputBox.TextSize = 14
    InputBox.Font = Enum.Font.Gotham
    InputBox.ClearTextOnFocus = false

    local InputCorner = Instance.new("UICorner")
    InputCorner.Parent = InputBox
    InputCorner.CornerRadius = UDim.new(0, 6)

    local InputStroke = Instance.new("UIStroke")
    InputStroke.Parent = InputBox
    InputStroke.Color = Color3.fromRGB(80, 80, 80)
    InputStroke.Thickness = 1

    local ConfirmButton = Instance.new("TextButton")
    ConfirmButton.Parent = PopupFrame
    ConfirmButton.Size = UDim2.new(0, 80, 0, 25)
    ConfirmButton.Position = UDim2.new(0.5, -90, 1, -40)
    ConfirmButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色按钮
    ConfirmButton.BackgroundTransparency = 0.7 -- 半透明
    ConfirmButton.Text = "确认"
    ConfirmButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    ConfirmButton.TextSize = 12
    ConfirmButton.Font = Enum.Font.Gotham

    local ConfirmCorner = Instance.new("UICorner")
    ConfirmCorner.Parent = ConfirmButton
    ConfirmCorner.CornerRadius = UDim.new(0, 5)

    local CancelButton = Instance.new("TextButton")
    CancelButton.Parent = PopupFrame
    CancelButton.Size = UDim2.new(0, 80, 0, 25)
    CancelButton.Position = UDim2.new(0.5, 10, 1, -40)
    CancelButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色按钮
    CancelButton.BackgroundTransparency = 0.7 -- 半透明
    CancelButton.Text = "取消"
    CancelButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    CancelButton.TextSize = 12
    CancelButton.Font = Enum.Font.Gotham

    local CancelCorner = Instance.new("UICorner")
    CancelCorner.Parent = CancelButton
    CancelCorner.CornerRadius = UDim.new(0, 5)

    ConfirmButton.MouseButton1Click:Connect(function()
        local inputText = InputBox.Text
        if inputText and inputText ~= "" then
            local numberValue = tonumber(inputText)
            if numberValue then
                callback(numberValue)
            end
        end
        PopupGui:Destroy()
    end)

    CancelButton.MouseButton1Click:Connect(function()
        PopupGui:Destroy()
    end)

    InputBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local inputText = InputBox.Text
            if inputText and inputText ~= "" then
                local numberValue = tonumber(inputText)
                if numberValue then
                    callback(numberValue)
                end
            end
            PopupGui:Destroy()
        end
    end)
end

-- 坐标选择弹窗
local function ShowCoordinateSelectionPopup(title, actionCallback)
    if #CoordinateManager.SavedCoordinates == 0 then
        ShowNotification("没有保存的坐标", Color3.fromRGB(255, 150, 0))
        return
    end

    local SelectionGui = Instance.new("ScreenGui")
    SelectionGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local SelectionFrame = Instance.new("Frame")
    SelectionFrame.Parent = SelectionGui
    SelectionFrame.Size = UDim2.new(0, 280, 0, 350)
    SelectionFrame.Position = UDim2.new(0.5, -140, 0.5, -175)
    SelectionFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色背景
    SelectionFrame.BackgroundTransparency = 0.3 -- 半透明
    SelectionFrame.Active = true
    SelectionFrame.Draggable = true

    local SelectionCorner = Instance.new("UICorner")
    SelectionCorner.Parent = SelectionFrame
    SelectionCorner.CornerRadius = UDim.new(0, 10)

    local SelectionStroke = Instance.new("UIStroke")
    SelectionStroke.Parent = SelectionFrame
    SelectionStroke.Color = Color3.fromRGB(80, 80, 80)
    SelectionStroke.Thickness = 2

    local Title = Instance.new("TextLabel")
    Title.Parent = SelectionFrame
    Title.Size = UDim2.new(1, -20, 0, 30)
    Title.Position = UDim2.new(0, 10, 0, 10)
    Title.BackgroundTransparency = 1
    Title.Text = title
    Title.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    Title.TextSize = 14
    Title.Font = Enum.Font.GothamBold

    local ScrollFrame = Instance.new("ScrollingFrame")
    ScrollFrame.Parent = SelectionFrame
    ScrollFrame.Size = UDim2.new(1, -20, 1, -80)
    ScrollFrame.Position = UDim2.new(0, 10, 0, 50)
    ScrollFrame.BackgroundTransparency = 1
    ScrollFrame.ScrollBarThickness = 4
    ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, #CoordinateManager.SavedCoordinates * 45)

    local CloseButton = Instance.new("TextButton")
    CloseButton.Parent = SelectionFrame
    CloseButton.Size = UDim2.new(0, 80, 0, 25)
    CloseButton.Position = UDim2.new(0.5, -40, 1, -35)
    CloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色按钮
    CloseButton.BackgroundTransparency = 0.7 -- 半透明
    CloseButton.Text = "关闭"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    CloseButton.TextSize = 12
    CloseButton.Font = Enum.Font.Gotham

    local CloseCorner = Instance.new("UICorner")
    CloseCorner.Parent = CloseButton
    CloseCorner.CornerRadius = UDim.new(0, 5)

    for i, coord in ipairs(CoordinateManager.SavedCoordinates) do
        local CoordButton = Instance.new("TextButton")
        CoordButton.Size = UDim2.new(1, 0, 0, 40)
        CoordButton.Position = UDim2.new(0, 0, 0, (i-1)*45)
        CoordButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        CoordButton.BackgroundTransparency = 0.5 -- 半透明
        CoordButton.Text = string.format("%s\nX: %.1f, Y: %.1f, Z: %.1f", 
            coord.name, coord.x, coord.y, coord.z)
        CoordButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
        CoordButton.TextSize = 10
        CoordButton.Font = Enum.Font.Gotham
        CoordButton.TextWrapped = true
        CoordButton.Parent = ScrollFrame

        local CoordCorner = Instance.new("UICorner")
        CoordCorner.Parent = CoordButton
        CoordCorner.CornerRadius = UDim.new(0, 6)

        local CoordStroke = Instance.new("UIStroke")
        CoordStroke.Parent = CoordButton
        CoordStroke.Color = Color3.fromRGB(80, 80, 80)
        CoordStroke.Thickness = 1

        CoordButton.MouseButton1Click:Connect(function()
            actionCallback(coord, i)
            SelectionGui:Destroy()
        end)
    end

    CloseButton.MouseButton1Click:Connect(function()
        SelectionGui:Destroy()
    end)
end

-- 坐标管理功能
local function SaveCurrentCoordinate()
    local character = Players.LocalPlayer.Character
    if not character then
        ShowNotification("角色未找到", Color3.fromRGB(255, 50, 50))
        return
    end

    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        ShowNotification("未找到HumanoidRootPart", Color3.fromRGB(255, 50, 50))
        return
    end

    CreateTextInputPopup("保存坐标", "输入坐标名称", "", function(coordinateName)
        local position = humanoidRootPart.Position
        local coordinate = {
            name = coordinateName,
            x = math.round(position.X * 100) / 100,
            y = math.round(position.Y * 100) / 100,
            z = math.round(position.Z * 100) / 100,
            timestamp = os.time()
        }

        table.insert(CoordinateManager.SavedCoordinates, coordinate)
        SaveCoordinates()

        ShowNotification("坐标已保存: " .. coordinateName, Color3.fromRGB(0, 255, 100))
    end)
end

local function TeleportToCoordinate()
    ShowCoordinateSelectionPopup("选择要传送的坐标", function(coord)
        local character = Players.LocalPlayer.Character
        if not character then
            ShowNotification("角色未找到", Color3.fromRGB(255, 50, 50))
            return
        end

        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            ShowNotification("未找到HumanoidRootPart", Color3.fromRGB(255, 50, 50))
            return
        end

        humanoidRootPart.CFrame = CFrame.new(coord.x, coord.y, coord.z)
        ShowNotification("已传送到: " .. coord.name, Color3.fromRGB(0, 255, 100))
    end)
end

local function DeleteCoordinate()
    ShowCoordinateSelectionPopup("选择要删除的坐标", function(coord, index)
        table.remove(CoordinateManager.SavedCoordinates, index)
        SaveCoordinates()
        ShowNotification("已删除坐标: " .. coord.name, Color3.fromRGB(255, 100, 0))
    end)
end

-- 自定义拖动功能 - 只在标题栏拖动
local function setupTitleBarDrag(dragArea, guiObject)
        local dragging = false
        local dragInput
        local dragStart
        local startPos

        dragArea.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                        dragging = true
                        dragStart = input.Position
                        startPos = guiObject.Position

                        input.Changed:Connect(function()
                                if input.UserInputState == Enum.UserInputState.End then
                                        dragging = false
                                end
                        end)
                end
        end)

        dragArea.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                        dragInput = input
                end
        end)

        UserInputService.InputChanged:Connect(function(input)
                if dragging and input == dragInput then
                        local delta = input.Position - dragStart
                        guiObject.Position = UDim2.new(
                                startPos.X.Scale, 
                                startPos.X.Offset + delta.X,
                                startPos.Y.Scale, 
                                startPos.Y.Offset + delta.Y
                        )
                end
        end)
end

-- 应用增强拖动功能 - 只在标题栏拖动
setupTitleBarDrag(titleBar, mainFrame)
setupTitleBarDrag(squareIcon, squareIcon)

-- 隐藏/显示功能
hideButton.MouseButton1Click:Connect(function()
        if not isHidden then
                mainFrame.Visible = false
                squareIcon.Visible = true
                isHidden = true
                ShowNotification("UI已隐藏", Color3.fromRGB(255, 150, 0))
        end
end)

-- 正方形图标点击功能
squareIcon.MouseButton1Click:Connect(function()
        mainFrame.Visible = true
        squareIcon.Visible = false
        isHidden = false
        ShowNotification("UI已显示", Color3.fromRGB(0, 255, 100))
end)

-- 添加悬停效果（临时变色，不永久）
local function addHoverEffect(button)
    local originalTransparency = button.BackgroundTransparency

    button.MouseEnter:Connect(function()
        button.BackgroundTransparency = originalTransparency - 0.2
    end)

    button.MouseLeave:Connect(function()
        button.BackgroundTransparency = originalTransparency
    end)

    button.MouseButton1Down:Connect(function()
        button.BackgroundTransparency = originalTransparency - 0.3
    end)

    button.MouseButton1Up:Connect(function()
        button.BackgroundTransparency = originalTransparency - 0.2
    end)
end

addHoverEffect(hideButton)
addHoverEffect(squareIcon)

-- 创建功能按钮函数 - 调整为透明按钮
local function createFunctionButton(name, text, color)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0.95, 0, 0, 30) -- 更小的按钮高度
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色按钮
    button.BackgroundTransparency = 0.8 -- 透明
    button.BorderSizePixel = 1
    button.BorderColor3 = Color3.fromRGB(80, 80, 80)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.LayoutOrder = #scrollFrame:GetChildren()
    button.ZIndex = 3 -- 确保在背景图片前面
    button.Parent = scrollFrame

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button

    addHoverEffect(button)

    return button
end

-- 传送功能
-- 获取所有玩家
local function GetAllPlayers()
    local players = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(players, player)
        end
    end
    return players
end

-- 创建玩家选择UI
local function CreatePlayerSelectionUI()
    local PlayerSelectGui = Instance.new("ScreenGui")
    PlayerSelectGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    PlayerSelectGui.Name = "PlayerSelectionUI"
    PlayerSelectGui.ResetOnSpawn = false

    local PlayerSelectFrame = Instance.new("Frame")
    PlayerSelectFrame.Parent = PlayerSelectGui
    PlayerSelectFrame.Size = UDim2.new(0, 200, 0, 300)
    PlayerSelectFrame.Position = UDim2.new(0.5, -100, 0.5, -150)
    PlayerSelectFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色背景
    PlayerSelectFrame.BackgroundTransparency = 0.3 -- 半透明
    PlayerSelectFrame.Active = true
    PlayerSelectFrame.Draggable = true

    local PlayerSelectCorner = Instance.new("UICorner")
    PlayerSelectCorner.Parent = PlayerSelectFrame
    PlayerSelectCorner.CornerRadius = UDim.new(0, 10)

    local PlayerSelectStroke = Instance.new("UIStroke")
    PlayerSelectStroke.Parent = PlayerSelectFrame
    PlayerSelectStroke.Color = Color3.fromRGB(80, 80, 80)
    PlayerSelectStroke.Thickness = 2

    local Title = Instance.new("TextLabel")
    Title.Parent = PlayerSelectFrame
    Title.Size = UDim2.new(1, -20, 0, 30)
    Title.Position = UDim2.new(0, 10, 0, 10)
    Title.BackgroundTransparency = 1
    Title.Text = "选择玩家"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    Title.TextSize = 14
    Title.Font = Enum.Font.GothamBold

    local PlayerScroll = Instance.new("ScrollingFrame")
    PlayerScroll.Parent = PlayerSelectFrame
    PlayerScroll.Size = UDim2.new(1, -20, 1, -80)
    PlayerScroll.Position = UDim2.new(0, 10, 0, 50)
    PlayerScroll.BackgroundTransparency = 1
    PlayerScroll.ScrollBarThickness = 4

    local PlayerListLayout = Instance.new("UIListLayout")
    PlayerListLayout.Parent = PlayerScroll
    PlayerListLayout.SortOrder = Enum.SortOrder.Name

    local CloseButton = Instance.new("TextButton")
    CloseButton.Parent = PlayerSelectFrame
    CloseButton.Size = UDim2.new(0, 80, 0, 25)
    CloseButton.Position = UDim2.new(0.5, -40, 1, -35)
    CloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- 黑色按钮
    CloseButton.BackgroundTransparency = 0.7 -- 半透明
    CloseButton.Text = "关闭"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
    CloseButton.TextSize = 12
    CloseButton.Font = Enum.Font.Gotham

    local CloseCorner = Instance.new("UICorner")
    CloseCorner.Parent = CloseButton
    CloseCorner.CornerRadius = UDim.new(0, 5)

    -- 填充玩家列表
    Teleport.PlayerList = GetAllPlayers()
    PlayerScroll.CanvasSize = UDim2.new(0, 0, 0, #Teleport.PlayerList * 35)

    for _, player in ipairs(Teleport.PlayerList) do
        local PlayerButton = Instance.new("TextButton")
        PlayerButton.Size = UDim2.new(1, 0, 0, 30)
        PlayerButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        PlayerButton.BackgroundTransparency = 0.5 -- 半透明
        PlayerButton.Text = player.Name
        PlayerButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
        PlayerButton.TextSize = 11
        PlayerButton.Font = Enum.Font.Gotham
        PlayerButton.Parent = PlayerScroll

        local PlayerButtonCorner = Instance.new("UICorner")
        PlayerButtonCorner.Parent = PlayerButton
        PlayerButtonCorner.CornerRadius = UDim.new(0, 6)

        local PlayerButtonStroke = Instance.new("UIStroke")
        PlayerButtonStroke.Parent = PlayerButton
        PlayerButtonStroke.Color = Color3.fromRGB(80, 80, 80)
        PlayerButtonStroke.Thickness = 1

        PlayerButton.MouseButton1Click:Connect(function()
            Teleport.TargetPlayer = player
            ShowNotification("已选择: "..player.Name, Color3.fromRGB(0, 200, 255))
            PlayerSelectGui:Destroy()
        end)
    end

    CloseButton.MouseButton1Click:Connect(function()
        PlayerSelectGui:Destroy()
        ShowNotification("玩家选择已关闭", Color3.fromRGB(255, 100, 0))
    end)
end

-- 单次传送功能
local function TeleportToPlayer()
    if not Teleport.TargetPlayer then
        ShowNotification("请先选择目标玩家", Color3.fromRGB(255, 50, 50))
        return
    end

    local myChar = Players.LocalPlayer.Character
    local targetChar = Teleport.TargetPlayer.Character

    if not myChar or not targetChar then
        ShowNotification("角色未找到", Color3.fromRGB(255, 50, 50))
        return
    end

    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")

    if myRoot and targetRoot then
        -- 传送到目标玩家头上
        local newPos = Vector3.new(
            targetRoot.Position.X,
            targetRoot.Position.Y + 5, -- 站在目标玩家头上
            targetRoot.Position.Z
        )
        myRoot.CFrame = CFrame.new(newPos)
        ShowNotification("已传送到 "..Teleport.TargetPlayer.Name.." 的头上", Color3.fromRGB(0, 255, 100))
    else
        ShowNotification("未找到HumanoidRootPart", Color3.fromRGB(255, 50, 50))
    end
end

-- 玩家管理 - 修复：正确监听新玩家加入
Players.PlayerAdded:Connect(function(player)
    if player ~= Players.LocalPlayer then
        table.insert(Teleport.PlayerList, player)
        -- 修复：如果ESP已开启，为新玩家创建ESP
        if ESPEnabled then
            CreateESP(player)
        end
    end
end)

Players.PlayerRemoving:Connect(function(player)
    for i, p in ipairs(Teleport.PlayerList) do
        if p == player then
            table.remove(Teleport.PlayerList, i)
            break
        end
    end

    -- 如果目标玩家离开，清除选择
    if Teleport.TargetPlayer == player then
        Teleport.TargetPlayer = nil
        ShowNotification("目标玩家已离开，已清除选择", Color3.fromRGB(255, 100, 0))
    end
end)

-- 创建所有功能按钮（保持所有原有功能）

-- ESP透视按钮（带名称显示）
local espButton = createFunctionButton("ESP透视", "ESP透视（带名称）", Color3.fromRGB(0, 0, 0))
espButton.MouseButton1Click:Connect(function()
    local newState = ToggleESP()
    if newState then
        espButton.Text = "ESP透视已开启"
    else
        espButton.Text = "ESP透视（带名称）"
    end
end)

-- NPC透视按钮
local npcESPButton = createFunctionButton("NPCESPButton", "NPC透视", Color3.fromRGB(0, 0, 0))
npcESPButton.MouseButton1Click:Connect(function()
    local newState = ToggleNPCESP()
    if newState then
        npcESPButton.Text = "NPC透视已开启"
    else
        npcESPButton.Text = "NPC透视"
    end
end)

-- 走路创人功能按钮
local throwButton = createFunctionButton("ThrowButton", "走路创人", Color3.fromRGB(0, 0, 0))
throwButton.MouseButton1Click:Connect(function()
    ToggleThrow(not ThrowEnabled)
    if ThrowEnabled then
        throwButton.Text = "走路创人已开启"
    else
        throwButton.Text = "走路创人"
    end
end)

-- 爬墙功能按钮
local climbButton = createFunctionButton("ClimbButton", "爬墙", Color3.fromRGB(0, 0, 0))
climbButton.MouseButton1Click:Connect(function()
    if not climbEnabled then
        ToggleClimb(true)
        if climbEnabled then
            climbButton.Text = "爬墙已开启"
            climbButton.AutoButtonColor = false
            climbButton.Active = false
        else
            climbButton.Text = "爬墙加载失败"
        end
    else
        ShowNotification("爬墙功能已开启，无法关闭", Color3.fromRGB(255, 150, 0))
    end
end)

-- 飞行功能按钮
local flyButton = createFunctionButton("FlyButton", "加载飞行功能", Color3.fromRGB(0, 0, 0))
flyButton.MouseButton1Click:Connect(function()
    local success, result = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/cytj777i/666-/main/%E5%8F%AA%E8%83%BD%E8%87%AA%E5%B7%B1%E6%90%9E%E4%B8%80%E4%B8%AA%E4%BA%86"))()
    end)
    if success then
        flyButton.Text = "飞行已加载"
        ShowNotification("飞行功能已加载", Color3.fromRGB(0, 255, 100))
    else
        flyButton.Text = "重新加载飞行"
        ShowNotification("飞行功能加载失败", Color3.fromRGB(255, 50, 50))
        warn("飞行脚本加载错误: " .. tostring(result))
    end
end)

-- 穿墙功能按钮
local noclipButton = createFunctionButton("NoclipButton", "穿墙模式", Color3.fromRGB(0, 0, 0))
local noclipEnabled = false
local noclipConnection

local function toggleNoclip()
    if noclipEnabled then
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        local character = player.Character
        if character then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
        noclipEnabled = false
        noclipButton.Text = "穿墙模式"
        ShowNotification("穿墙模式已关闭", Color3.fromRGB(255, 100, 0))
    else
        noclipEnabled = true
        noclipButton.Text = "穿墙已启用"
        noclipConnection = RunService.Stepped:Connect(function()
            if not noclipEnabled then
                noclipConnection:Disconnect()
                return
            end
            local character = player.Character
            if character then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
        ShowNotification("穿墙模式已开启", Color3.fromRGB(0, 255, 100))
    end
end

noclipButton.MouseButton1Click:Connect(toggleNoclip)

-- 传送功能按钮
local selectPlayerButton = createFunctionButton("SelectPlayerButton", "选择传送目标玩家", Color3.fromRGB(0, 0, 0))
local teleportButton = createFunctionButton("TeleportButton", "传送", Color3.fromRGB(0, 0, 0))
selectPlayerButton.MouseButton1Click:Connect(CreatePlayerSelectionUI)
teleportButton.MouseButton1Click:Connect(TeleportToPlayer)

-- 坐标管理按钮
local saveCoordButton = createFunctionButton("SaveCoordButton", "保存当前坐标", Color3.fromRGB(0, 0, 0))
local teleportCoordButton = createFunctionButton("TeleportCoordButton", "传送保存坐标", Color3.fromRGB(0, 0, 0))
local deleteCoordButton = createFunctionButton("DeleteCoordButton", "删除保存坐标", Color3.fromRGB(0, 0, 0))
saveCoordButton.MouseButton1Click:Connect(SaveCurrentCoordinate)
teleportCoordButton.MouseButton1Click:Connect(TeleportToCoordinate)
deleteCoordButton.MouseButton1Click:Connect(DeleteCoordinate)

-- 速度设置按钮
local speedButton = createFunctionButton("SpeedButton", "设置移动速度", Color3.fromRGB(0, 0, 0))
local function setWalkSpeed(value)
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = value
            return true
        else
            return false, "未找到Humanoid"
        end
    else
        return false, "角色未找到"
    end
end

speedButton.MouseButton1Click:Connect(function()
    CreateTextInputPopup("设置移动速度", "输入移动速度 (16-400)", "16", function(value)
        local numValue = tonumber(value)
        if numValue and numValue >= 16 and numValue <= 400 then
            local success, errorMsg = setWalkSpeed(numValue)
            if success then
                ShowNotification("移动速度已设置为: " .. numValue, Color3.fromRGB(0, 255, 100))
            else
                ShowNotification("设置失败: " .. errorMsg, Color3.fromRGB(255, 50, 50))
            end
        else
            ShowNotification("请输入16-400之间的有效数字", Color3.fromRGB(255, 50, 50))
        end
    end)
end)

-- 夜视功能按钮
local nightVisionButton = createFunctionButton("NightVisionButton", "夜视", Color3.fromRGB(0, 0, 0))
nightVisionButton.MouseButton1Click:Connect(function()
    ToggleNightVision(not nightVisionEnabled)
    if nightVisionEnabled then
        nightVisionButton.Text = "夜视已开启"
    else
        nightVisionButton.Text = "夜视"
    end
end)

-- 无限跳功能按钮
local infiniteJumpButton = createFunctionButton("InfiniteJumpButton", "无限跳", Color3.fromRGB(0, 0, 0))
infiniteJumpButton.MouseButton1Click:Connect(function()
    ToggleInfiniteJump(not infiniteJumpEnabled)
    if infiniteJumpEnabled then
        infiniteJumpButton.Text = "无限跳已开启"
    else
        infiniteJumpButton.Text = "无限跳"
    end
end)

-- 防止摔落伤害按钮
local antiFallButton = createFunctionButton("AntiFallButton", "防止摔落伤害", Color3.fromRGB(0, 0, 0))
antiFallButton.MouseButton1Click:Connect(function()
    ToggleAntiFall(not antiFallEnabled)
    if antiFallEnabled then
        antiFallButton.Text = "防摔已开启"
    else
        antiFallButton.Text = "防止摔落伤害"
    end
end)

-- 全局未固定物体控制按钮
local globalFloatButton = createFunctionButton("GlobalFloatButton", "全局未固定物体控制", Color3.fromRGB(0, 0, 0))
globalFloatButton.MouseButton1Click:Connect(function()
    ToggleGlobalFloat(not globalFloatEnabled)
    if globalFloatEnabled then
        globalFloatButton.Text = "全局未固定物体控制已开启"
    else
        globalFloatButton.Text = "全局未固定物体控制"
    end
end)

-- 单一物体飞行功能按钮
local singleFlightButton = createFunctionButton("SingleFlightButton", "单一物体飞行", Color3.fromRGB(0, 0, 0))
singleFlightButton.MouseButton1Click:Connect(function()
    ShowNotification("正在加载单一物体飞行...", Color3.fromRGB(255, 255, 0))
    local success, result = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/cytj777i/6669178/main/单一物体飞行载自己最终优化版"))()
    end)
    if success then
        singleFlightButton.Text = "飞行已加载"
        ShowNotification("单一物体飞行已加载", Color3.fromRGB(0, 255, 100))
    else
        singleFlightButton.Text = "重新加载飞行"
        ShowNotification("单一物体飞行加载失败", Color3.fromRGB(255, 50, 50))
        warn("单一物体飞行脚本加载错误: " .. tostring(result))
    end
end)

-- 零件破坏者按钮
local partDestroyerButton = createFunctionButton("PartDestroyerButton", "零件破坏者", Color3.fromRGB(0, 0, 0))
partDestroyerButton.MouseButton1Click:Connect(function()
    ShowNotification("正在加载零件破坏者...", Color3.fromRGB(255, 255, 0))
    local success, result = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/cytj777i/-/main/零件破坏者v2"))()
    end)
    if success then
        partDestroyerButton.Text = "破坏者已加载"
        ShowNotification("零件破坏者已加载", Color3.fromRGB(0, 255, 100))
    else
        partDestroyerButton.Text = "重新加载破坏者"
        ShowNotification("零件破坏者加载失败", Color3.fromRGB(255, 50, 50))
        warn("零件破坏者脚本加载错误: " .. tostring(result))
    end
end)

-- 踏空行走功能按钮
local airWalkButton = createFunctionButton("AirWalkButton", "踏空行走", Color3.fromRGB(0, 0, 0))
airWalkButton.MouseButton1Click:Connect(function()
    ToggleAirWalk(not airWalkEnabled)
    if airWalkEnabled then
        airWalkButton.Text = "踏空行走已开启"
    else
        airWalkButton.Text = "踏空行走"
    end
end)

-- 隐身功能按钮
local invisibleButton = createFunctionButton("InvisibleButton", "隐身", Color3.fromRGB(0, 0, 0))
invisibleButton.MouseButton1Click:Connect(function()
    ToggleInvisible(not invisibleEnabled)
    if invisibleEnabled then
        invisibleButton.Text = "隐身已开启"
    else
        invisibleButton.Text = "隐身"
    end
end)

-- Egor功能按钮
local egorButton = createFunctionButton("EgorButton", "Egor功能", Color3.fromRGB(0, 0, 0))
egorButton.MouseButton1Click:Connect(function()
    ToggleEgor(not egorEnabled)
    if egorEnabled then
        egorButton.Text = "Egor已开启"
    else
        egorButton.Text = "Egor功能"
    end
end)

-- 甩飞功能按钮
local throwFlyButton = createFunctionButton("ThrowFlyButton", "甩飞", Color3.fromRGB(0, 0, 0))
throwFlyButton.MouseButton1Click:Connect(function()
    ToggleThrowFly(not throwFlyEnabled)
    if throwFlyEnabled then
        throwFlyButton.Text = "甩飞已开启"
    else
        throwFlyButton.Text = "甩飞"
    end
end)

-- 传送工具按钮
local teleportToolButton = createFunctionButton("TeleportToolButton", "点击传送工具", Color3.fromRGB(0, 0, 0))
teleportToolButton.MouseButton1Click:Connect(function()
    CreateTeleportTool()
    teleportToolButton.Text = "传送工具已添加"
end)

-- 角色重生时重新连接无限跳
player.CharacterAdded:Connect(function(character)
    if infiniteJumpEnabled then
        character:WaitForChild("Humanoid")
        if jumpConnection then
            jumpConnection:Disconnect()
        end
        jumpConnection = UserInputService.JumpRequest:Connect(function()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState("Jumping")
            end
        end)
        ShowNotification("角色重生，已重新连接无限跳", Color3.fromRGB(0, 200, 255))
    end
end)

-- 角色重生时重新应用穿墙状态
player.CharacterAdded:Connect(function(character)
    if noclipEnabled then
        character:WaitForChild("Humanoid")
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        ShowNotification("角色重生，已重新应用穿墙模式", Color3.fromRGB(0, 200, 255))
    end
end)

-- 角色重生时重新应用移动速度设置
local lastWalkSpeed = 16
player.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = lastWalkSpeed
    ShowNotification("角色重生，已重新应用移动速度设置", Color3.fromRGB(0, 200, 255))
end)

-- 初始化坐标管理器
InitCoordinateManager()

-- 清理函数（当脚本被销毁时）
local function cleanup()
    DisableESP()
    DisableNPCESP()
    if noclipConnection then
        noclipConnection:Disconnect()
    end
    if jumpConnection then
        jumpConnection:Disconnect()
    end
end

-- 连接清理事件
game:GetService("CoreGui").ChildRemoved:Connect(function(child)
    if child == screenGui then
        cleanup()
    end
end)